pipeline {
    agent any

    environment {
        // AWS credentials stored in Jenkins credentials manager
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION    = 'eu-north-1'

        // Terraform version (optional)
        TERRAFORM_VERSION = "1.11.4"
    }

    stages {
        stage('GIT PULLING) {
            steps {
                git branch: 'main',
                    url: 'https://github.com/CKDL-devops/EASYSHOP_PROJECT.git'
            }
        }

        stage('TERRAFORM INSTALLATION') {
            steps {
                sh '''
                if ! terraform -v; then
                  curl -Lo terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
                  unzip terraform.zip
                  sudo mv terraform /usr/local/bin/
                fi
                terraform -v
                '''
            }
        }

        stage('Terraform Init') {
            steps {
                dir('EASYSHOP_PROJECT_V1') { // change to your terraform root folder
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('EASYSHOP_PROJECT_V1') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('EASYSHOP_PROJECT_V1') {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('EASYSHOP_PROJECT_V1') {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up workspace..."
            cleanWs()
        }
        success {
            echo "Terraform Infrastructure deployed successfully ✅"
        }
        failure {
            echo "Terraform deployment failed or not successfull ❌"
        }
    }
}
